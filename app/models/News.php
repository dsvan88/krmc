<?php

namespace app\models;

use app\core\Model;

class News extends Model
{
    public static $table = SQL_TBL_NEWS;
    public static function getPerPage($page = 0)
    {
        $table = self::$table;
        $searchQuery = "SELECT * FROM $table WHERE type = ? ";
        $values = ['news'];
        $searchQuery .= ' ORDER BY id DESC';

        if ($page === 0)
            $searchQuery .= ' LIMIT ' . CFG_NEWS_PER_PAGE;
        else
            $searchQuery .= ' LIMIT ' . CFG_NEWS_PER_PAGE . ' OFFSET ' . (CFG_NEWS_PER_PAGE * $page);

        return self::query($searchQuery, $values, 'Assoc');
    }
    public static function getCount()
    {
        $table = self::$table;
        return self::query("SELECT COUNT(id) FROM $table WHERE type = ? ", ['news'], 'Column');
    }
    public static function getAll($condition)
    {
        $table = self::$table;
        $where = '';
        $condArray = [];
        if (!empty($condition)) {
            $where = 'WHERE ';
            foreach ($condition as $key => $value) {
                $where .= "$key = :$key,";
            }
            $where = substr($where, 0, -1);
        }
        return self::query("SELECT * FROM $table $where", $condArray, 'Assoc');
    }
    public static function getDataById($id)
    {
        $table = self::$table;
        return self::query("SELECT * FROM $table WHERE id = ? LIMIT 1", [$id], 'Assoc')[0];
    }
    public static function getPromoData()
    {
        $table = self::$table;
        $result = self::query("SELECT * FROM $table WHERE type = ? LIMIT 1", ['promo'], 'Assoc');
        var_dump($table);
        var_dump($result);
        if (empty($result)) return false;
        return $result[0];
    }
    public static function getGameData($game)
    {
        $table = self::$table;
        $result = self::query("SELECT * FROM $table WHERE type = ? LIMIT 1", [$game], 'Assoc');
        if (empty($result)) return false;
        return $result[0];
    }
    public static function create(&$data)
    {
        $table = self::$table;
        $array = [
            'title' => trim($data['title']),
            'subtitle' => trim($data['subtitle']),
            'html' => trim($data['html']),
            'type' => trim($data['type']),
        ];
        if (isset($data['logo'])) {
            $array['logo'] = trim($data['logo']);
        }
        return self::insert($array, $table);
    }
    public static function edit($data, $id)
    {
        $table = self::$table;
        $array = [
            'title' => trim($data['title']),
            'subtitle' => trim($data['subtitle']),
            'html' => trim($data['html']),
        ];
        if (isset($data['type'])) {
            $array['type'] = trim($data['type']);
        }
        if (isset($data['logo'])) {
            $array['logo'] = trim($data['logo']);
        }
        $searchBy = ['id' => $id];
        if ($id === 'promo') {
            unset($array['type']);
            $searchBy = ['type' => 'promo'];
        }
        return self::update($array, $searchBy, $table);
    }
    public static function remove($id)
    {
        $table = self::$table;
        return self::delete($id, $table);
    }
    public static function init(){
        $table = self::$table;
        self::query(
            "CREATE TABLE IF NOT EXISTS $table (
                id INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
                type VARCHAR(50) NOT NULL DEFAULT 'news',
                user_id INT NOT NULL DEFAULT '1',
                title CHARACTER VARYING(250) NOT NULL DEFAULT '',
                subtitle CHARACTER VARYING(250) NOT NULL DEFAULT '',
                logo CHARACTER VARYING(250) NOT NULL DEFAULT '',
                html TEXT NULL DEFAULT NULL,
                published_at TIMESTAMP DEFAULT NOW(),
                created_at TIMESTAMP DEFAULT NOW(),
                updated_at TIMESTAMP DEFAULT NOW(),
                deleted_at INT NOT NULL DEFAULT '0',
                CONSTRAINT fk_user
                    FOREIGN KEY(user_id) 
                    REFERENCES users(id)
                    ON DELETE SET DEFAULT
            );"
        );

        if (self::query("SELECT COUNT (id) FROM $table", [], 'Column') < 1) {
            $promo = ['title' => 'Записываемся активнее!', 'subtitle' => 'Важен каждый игрок!', 'html' => 'Только Ваше участие позволяет клубу и другим игрокам становиться лучше!', 'type' => 'promo'];
            self::insert($promo, $table);
        }
    }
}
